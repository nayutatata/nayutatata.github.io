<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>windows操作系统下基于github和hexo搭建个人博客</title>
    <url>/2023/11/09/windows%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%9F%BA%E4%BA%8Egithub%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="依赖下载"><a href="#依赖下载" class="headerlink" title="依赖下载"></a>依赖下载</h1><h2 id="git下载"><a href="#git下载" class="headerlink" title="git下载"></a>git下载</h2><p>从阿里镜像下载即可<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">CNPM Binaries Mirror (npmmirror.com)</a></p>
<p>下载后需要通过以下命令设置用户名和邮箱：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;your_name&quot;</span><br><span class="line">git config --global user.email &quot;your_email&quot;</span><br></pre></td></tr></table></figure>

<p>为了防止执行<code>git push</code>和<code>git clone</code>等命令时出现网络速度较慢的问题，建议设置代理。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy &#x27;xxx.xxx.xxx.xxx : xxxx&#x27;</span><br><span class="line">git config --global https.proxy &#x27;xxx.xxx.xxx.xxx : xxxx&#x27;</span><br></pre></td></tr></table></figure>



<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>从官网直接下载最新版本即可<a href="https://link.zhihu.com/?target=https://nodejs.org/en/">https://link.zhihu.com/?target=https%3A//nodejs.org/en/</a></p>
<p>安装时记得勾选<code>Add to Path</code>将其加入环境变量中。</p>
<p><strong>检查是否安装成功</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>

<p>正常情况下会显示Node.js的版本号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>正常情况下会显示npm的版本号</p>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="安装和初始化"><a href="#安装和初始化" class="headerlink" title="安装和初始化"></a>安装和初始化</h3><p><strong>若无特殊说明，以下命令均在git bash中输入</strong></p>
<p>输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli <span class="comment"># 安装hexo</span></span><br></pre></td></tr></table></figure>

<p>安装之后，找一个空文件夹，比如<code>D:\Blog</code>，然后cd到该目录下，输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>还需要安装一个插件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>这个插件用于将<code>Blogs\public</code>文件夹的内容上传至github</p>
<h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><h2 id="在github上新建仓库"><a href="#在github上新建仓库" class="headerlink" title="在github上新建仓库"></a>在github上新建仓库</h2><p>新建一个名为<code>your_name.github.io</code>的仓库，这个仓库用于存放博客所需的静态文件。</p>
<h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>在git bash中输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t -rsa -C <span class="string">&quot;your_email&quot;</span> <span class="comment"># 指的是github的注册邮箱</span></span><br></pre></td></tr></table></figure>

<p>然后直接三个回车（无需设置密码）</p>
<p>打开<code>C:\Users\username\.ssh\id_rsa.pub</code>文件，复制内容。</p>
<p>打开<a href="https://github.com/settings/ssh/new%EF%BC%8C%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAssh">https://github.com/settings/ssh/new，创建一个ssh</a> key，将<code>id_rsa.pub</code>的内容粘贴到Key的框框下即可。</p>
<p><strong>检查是否创建成功：</strong></p>
<p>在git bash中输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>连接成功后会出现以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi your_name! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<h2 id="Hexo部分用法"><a href="#Hexo部分用法" class="headerlink" title="Hexo部分用法"></a>Hexo部分用法</h2><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>这个命令将会在<code>public</code>文件夹中生成相关的静态<code>html</code>文件。</p>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>这个会提供实时的预览服务，也就意味着在更新某个配置文件后，你不需要重新输入该命令即可在<code>http://localhost:4000</code>查看网页内容。</p>
<p><strong>可能会出现以下warning：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">warning: LF will be replaced by CRLF in</span><br></pre></td></tr></table></figure>

<p>可以输入以下内容解决：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global core.safecrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="部署至github"><a href="#部署至github" class="headerlink" title="部署至github"></a>部署至github</h3><p>在此之前，需要把根目录下的配置文件<code>_config.yml</code>中的<code>deploy</code>部分修改成：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:xxxxxx/xxxxxxx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>其中<code>repo</code>可以在仓库的<code>code</code>中获取</p>
<p>在git bash中输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>即可完成部署</p>
<p><strong>检查是否部署成功：</strong></p>
<p>打开<code>https://your_name.github.io</code>，如果内容和本地浏览内容一致，则部署成功。</p>
<p>如果不一致，可以考虑在本地输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>再进行检查。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>博客</tag>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>windows</tag>
      </tags>
  </entry>
</search>
